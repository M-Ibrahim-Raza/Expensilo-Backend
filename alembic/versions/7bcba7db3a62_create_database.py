"""Create Database

Revision ID: 7bcba7db3a62
Revises: 
Create Date: 2025-10-14 09:31:20.589579

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7bcba7db3a62'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Unique identifier for category'),
    sa.Column('name', sa.String(), nullable=False, comment='Category name'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Unique identifier for user'),
    sa.Column('name', sa.String(), nullable=False, comment="User's full name"),
    sa.Column('email', sa.String(), nullable=False, comment="User's email address"),
    sa.Column('hashed_password', sa.String(), nullable=True, comment='hashed password for authentication'),
    sa.Column('google_auth', sa.String(), nullable=True, comment='Google OAuth authentication token'),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='User preferences stored as JSON'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('transaction',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Unique identifier for transaction'),
    sa.Column('category_id', sa.BigInteger(), nullable=True, comment='Reference to category (NULL Allowed)'),
    sa.Column('type', sa.Enum('EXPENSE', 'INCOME', name='transaction_type_enum'), nullable=False, comment='Transaction type: EXPENSE or INCOME'),
    sa.Column('title', sa.String(), nullable=False, comment='Transaction title'),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type', 'title', 'category_id', name='uq_type_title_category')
    )
    op.create_table('user_category',
    sa.Column('user_id', sa.BigInteger(), nullable=False, comment='Reference to user'),
    sa.Column('category_id', sa.BigInteger(), nullable=False, comment='Reference to category'),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'category_id')
    )
    op.create_table('user_transaction',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Unique identifier for user transaction'),
    sa.Column('user_id', sa.BigInteger(), nullable=False, comment='Reference to user'),
    sa.Column('transaction_id', sa.BigInteger(), nullable=False, comment='Reference to transaction'),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='Transaction amount'),
    sa.Column('details', sa.String(), nullable=True, comment='Additional transaction details'),
    sa.Column('attachments', postgresql.ARRAY(sa.String()), nullable=True, comment='File attachments stored as array'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Transaction timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='Update timestamp'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_transaction')
    op.drop_table('user_category')
    op.drop_table('transaction')
    op.drop_table('user')
    op.drop_table('category')
    # ### end Alembic commands ###
